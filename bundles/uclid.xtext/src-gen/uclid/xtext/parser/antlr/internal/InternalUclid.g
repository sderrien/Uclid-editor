/*
 * generated by Xtext 2.24.0
 */
grammar InternalUclid;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
}

@lexer::header {
package uclid.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package uclid.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import uclid.xtext.services.UclidGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/

 	private UclidGrammarAccess grammarAccess;

    public InternalUclidParser(TokenStream input, UclidGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "ModelRule";
   	}

   	@Override
   	protected UclidGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModelRule
entryRuleModelRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRuleRule()); }
	iv_ruleModelRule=ruleModelRule
	{ $current=$iv_ruleModelRule.current; }
	EOF;

// Rule ModelRule
ruleModelRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getModelRuleAccess().getTopLevelAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelRuleAccess().getRulesModuleRuleParserRuleCall_1_0());
				}
				lv_rules_1_0=ruleModuleRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRuleRule());
					}
					add(
						$current,
						"rules",
						lv_rules_1_0,
						"uclid.xtext.Uclid.ModuleRule");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleFQN
entryRuleFQN returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFQNRule()); }
	iv_ruleFQN=ruleFQN
	{ $current=$iv_ruleFQN.current.getText(); }
	EOF;

// Rule FQN
ruleFQN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getFQNAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getFQNAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleModuleRule
entryRuleModuleRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModuleRuleRule()); }
	iv_ruleModuleRule=ruleModuleRule
	{ $current=$iv_ruleModuleRule.current; }
	EOF;

// Rule ModuleRule
ruleModuleRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getModuleRuleAccess().getModuleAction_0(),
					$current);
			}
		)
		otherlv_1='module'
		{
			newLeafNode(otherlv_1, grammarAccess.getModuleRuleAccess().getModuleKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getModuleRuleAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModuleRuleRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getModuleRuleAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModuleRuleAccess().getDDeclRuleParserRuleCall_4_0());
				}
				lv_d_4_0=ruleDeclRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModuleRuleRule());
					}
					add(
						$current,
						"d",
						lv_d_4_0,
						"uclid.xtext.Uclid.DeclRule");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModuleRuleAccess().getEControlBlockRuleParserRuleCall_5_0());
				}
				lv_e_5_0=ruleControlBlockRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModuleRuleRule());
					}
					set(
						$current,
						"e",
						lv_e_5_0,
						"uclid.xtext.Uclid.ControlBlockRule");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getModuleRuleAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleDeclRule
entryRuleDeclRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclRuleRule()); }
	iv_ruleDeclRule=ruleDeclRule
	{ $current=$iv_ruleDeclRule.current; }
	EOF;

// Rule DeclRule
ruleDeclRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDeclRuleAccess().getTypeDeclRuleParserRuleCall_0());
		}
		this_TypeDeclRule_0=ruleTypeDeclRule
		{
			$current = $this_TypeDeclRule_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDeclRuleAccess().getInputsDeclRuleParserRuleCall_1());
		}
		this_InputsDeclRule_1=ruleInputsDeclRule
		{
			$current = $this_InputsDeclRule_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDeclRuleAccess().getOutputsDeclRuleParserRuleCall_2());
		}
		this_OutputsDeclRule_2=ruleOutputsDeclRule
		{
			$current = $this_OutputsDeclRule_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDeclRuleAccess().getVarsDeclRuleParserRuleCall_3());
		}
		this_VarsDeclRule_3=ruleVarsDeclRule
		{
			$current = $this_VarsDeclRule_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDeclRuleAccess().getSharedVarsDeclRuleParserRuleCall_4());
		}
		this_SharedVarsDeclRule_4=ruleSharedVarsDeclRule
		{
			$current = $this_SharedVarsDeclRule_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDeclRuleAccess().getDefineDeclRuleParserRuleCall_5());
		}
		this_DefineDeclRule_5=ruleDefineDeclRule
		{
			$current = $this_DefineDeclRule_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDeclRuleAccess().getConstsDeclRuleParserRuleCall_6());
		}
		this_ConstsDeclRule_6=ruleConstsDeclRule
		{
			$current = $this_ConstsDeclRule_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDeclRuleAccess().getFunctionDeclParserRuleCall_7());
		}
		this_FunctionDecl_7=ruleFunctionDecl
		{
			$current = $this_FunctionDecl_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDeclRuleAccess().getProcedureDeclParserRuleCall_8());
		}
		this_ProcedureDecl_8=ruleProcedureDecl
		{
			$current = $this_ProcedureDecl_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDeclRuleAccess().getInstanceDeclRuleParserRuleCall_9());
		}
		this_InstanceDeclRule_9=ruleInstanceDeclRule
		{
			$current = $this_InstanceDeclRule_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDeclRuleAccess().getInitDeclRuleParserRuleCall_10());
		}
		this_InitDeclRule_10=ruleInitDeclRule
		{
			$current = $this_InitDeclRule_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDeclRuleAccess().getNextDeclRuleParserRuleCall_11());
		}
		this_NextDeclRule_11=ruleNextDeclRule
		{
			$current = $this_NextDeclRule_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDeclRuleAccess().getAxiomDeclRuleParserRuleCall_12());
		}
		this_AxiomDeclRule_12=ruleAxiomDeclRule
		{
			$current = $this_AxiomDeclRule_12.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDeclRuleAccess().getSpecDeclRuleParserRuleCall_13());
		}
		this_SpecDeclRule_13=ruleSpecDeclRule
		{
			$current = $this_SpecDeclRule_13.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTypeDeclRule
entryRuleTypeDeclRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeDeclRuleRule()); }
	iv_ruleTypeDeclRule=ruleTypeDeclRule
	{ $current=$iv_ruleTypeDeclRule.current; }
	EOF;

// Rule TypeDeclRule
ruleTypeDeclRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='type'
			{
				newLeafNode(otherlv_0, grammarAccess.getTypeDeclRuleAccess().getTypeKeyword_0_0());
			}
			(
				(
					(
						lv_name_1_0=RULE_ID
						{
							newLeafNode(lv_name_1_0, grammarAccess.getTypeDeclRuleAccess().getNameIDTerminalRuleCall_0_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTypeDeclRuleRule());
							}
							setWithLastConsumed(
								$current,
								"name",
								lv_name_1_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
				    |
				otherlv_2='*'
				{
					newLeafNode(otherlv_2, grammarAccess.getTypeDeclRuleAccess().getAsteriskKeyword_0_1_1());
				}
			)
			otherlv_3='='
			{
				newLeafNode(otherlv_3, grammarAccess.getTypeDeclRuleAccess().getEqualsSignKeyword_0_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeDeclRuleAccess().getTTypeRuleParserRuleCall_0_3_0());
					}
					lv_t_4_0=ruleTypeRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeDeclRuleRule());
						}
						set(
							$current,
							"t",
							lv_t_4_0,
							"uclid.xtext.Uclid.TypeRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=';'
			{
				newLeafNode(otherlv_5, grammarAccess.getTypeDeclRuleAccess().getSemicolonKeyword_0_4());
			}
		)
		    |
		(
			otherlv_6='type'
			{
				newLeafNode(otherlv_6, grammarAccess.getTypeDeclRuleAccess().getTypeKeyword_1_0());
			}
			(
				(
					lv_name_7_0=RULE_ID
					{
						newLeafNode(lv_name_7_0, grammarAccess.getTypeDeclRuleAccess().getNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTypeDeclRuleRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_7_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_8=';'
			{
				newLeafNode(otherlv_8, grammarAccess.getTypeDeclRuleAccess().getSemicolonKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleInputsDeclRule
entryRuleInputsDeclRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInputsDeclRuleRule()); }
	iv_ruleInputsDeclRule=ruleInputsDeclRule
	{ $current=$iv_ruleInputsDeclRule.current; }
	EOF;

// Rule InputsDeclRule
ruleInputsDeclRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='input'
		{
			newLeafNode(otherlv_0, grammarAccess.getInputsDeclRuleAccess().getInputKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInputsDeclRuleAccess().getInputsInputDeclParserRuleCall_1_0());
				}
				lv_inputs_1_0=ruleInputDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInputsDeclRuleRule());
					}
					add(
						$current,
						"inputs",
						lv_inputs_1_0,
						"uclid.xtext.Uclid.InputDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getInputsDeclRuleAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInputsDeclRuleAccess().getInputsInputDeclParserRuleCall_2_1_0());
					}
					lv_inputs_3_0=ruleInputDecl
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInputsDeclRuleRule());
						}
						add(
							$current,
							"inputs",
							lv_inputs_3_0,
							"uclid.xtext.Uclid.InputDecl");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getInputsDeclRuleAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInputsDeclRuleAccess().getTTypeRuleParserRuleCall_4_0());
				}
				lv_t_5_0=ruleTypeRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInputsDeclRuleRule());
					}
					set(
						$current,
						"t",
						lv_t_5_0,
						"uclid.xtext.Uclid.TypeRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getInputsDeclRuleAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleOutputsDeclRule
entryRuleOutputsDeclRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutputsDeclRuleRule()); }
	iv_ruleOutputsDeclRule=ruleOutputsDeclRule
	{ $current=$iv_ruleOutputsDeclRule.current; }
	EOF;

// Rule OutputsDeclRule
ruleOutputsDeclRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='output'
		{
			newLeafNode(otherlv_0, grammarAccess.getOutputsDeclRuleAccess().getOutputKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOutputsDeclRuleAccess().getOutputsOutputDeclParserRuleCall_1_0());
				}
				lv_outputs_1_0=ruleOutputDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOutputsDeclRuleRule());
					}
					add(
						$current,
						"outputs",
						lv_outputs_1_0,
						"uclid.xtext.Uclid.OutputDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getOutputsDeclRuleAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOutputsDeclRuleAccess().getOutputsOutputDeclParserRuleCall_2_1_0());
					}
					lv_outputs_3_0=ruleOutputDecl
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOutputsDeclRuleRule());
						}
						add(
							$current,
							"outputs",
							lv_outputs_3_0,
							"uclid.xtext.Uclid.OutputDecl");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getOutputsDeclRuleAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOutputsDeclRuleAccess().getTTypeRuleParserRuleCall_4_0());
				}
				lv_t_5_0=ruleTypeRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOutputsDeclRuleRule());
					}
					set(
						$current,
						"t",
						lv_t_5_0,
						"uclid.xtext.Uclid.TypeRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getOutputsDeclRuleAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleInputDecl
entryRuleInputDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInputDeclRule()); }
	iv_ruleInputDecl=ruleInputDecl
	{ $current=$iv_ruleInputDecl.current; }
	EOF;

// Rule InputDecl
ruleInputDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getInputDeclAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getInputDeclRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleOutputDecl
entryRuleOutputDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutputDeclRule()); }
	iv_ruleOutputDecl=ruleOutputDecl
	{ $current=$iv_ruleOutputDecl.current; }
	EOF;

// Rule OutputDecl
ruleOutputDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getOutputDeclAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getOutputDeclRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleVarDecl
entryRuleVarDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarDeclRule()); }
	iv_ruleVarDecl=ruleVarDecl
	{ $current=$iv_ruleVarDecl.current; }
	EOF;

// Rule VarDecl
ruleVarDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getVarDeclAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getVarDeclRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleFuncDecl
entryRuleFuncDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncDeclRule()); }
	iv_ruleFuncDecl=ruleFuncDecl
	{ $current=$iv_ruleFuncDecl.current; }
	EOF;

// Rule FuncDecl
ruleFuncDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getFuncDeclAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFuncDeclRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleVarsDeclRule
entryRuleVarsDeclRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarsDeclRuleRule()); }
	iv_ruleVarsDeclRule=ruleVarsDeclRule
	{ $current=$iv_ruleVarsDeclRule.current; }
	EOF;

// Rule VarsDeclRule
ruleVarsDeclRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='var'
		{
			newLeafNode(otherlv_0, grammarAccess.getVarsDeclRuleAccess().getVarKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getVarsDeclRuleAccess().getVarsVarDeclParserRuleCall_1_0_0());
					}
					lv_vars_1_0=ruleVarDecl
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVarsDeclRuleRule());
						}
						add(
							$current,
							"vars",
							lv_vars_1_0,
							"uclid.xtext.Uclid.VarDecl");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2=','
				{
					newLeafNode(otherlv_2, grammarAccess.getVarsDeclRuleAccess().getCommaKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getVarsDeclRuleAccess().getVarsVarDeclParserRuleCall_1_1_1_0());
						}
						lv_vars_3_0=ruleVarDecl
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVarsDeclRuleRule());
							}
							add(
								$current,
								"vars",
								lv_vars_3_0,
								"uclid.xtext.Uclid.VarDecl");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getVarsDeclRuleAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVarsDeclRuleAccess().getTTypeRuleParserRuleCall_3_0());
				}
				lv_t_5_0=ruleTypeRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarsDeclRuleRule());
					}
					set(
						$current,
						"t",
						lv_t_5_0,
						"uclid.xtext.Uclid.TypeRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getVarsDeclRuleAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleConstsDeclRule
entryRuleConstsDeclRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstsDeclRuleRule()); }
	iv_ruleConstsDeclRule=ruleConstsDeclRule
	{ $current=$iv_ruleConstsDeclRule.current; }
	EOF;

// Rule ConstsDeclRule
ruleConstsDeclRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='const'
		{
			newLeafNode(otherlv_0, grammarAccess.getConstsDeclRuleAccess().getConstKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConstsDeclRuleAccess().getConstantsConstDeclParserRuleCall_1_0());
				}
				lv_constants_1_0=ruleConstDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstsDeclRuleRule());
					}
					add(
						$current,
						"constants",
						lv_constants_1_0,
						"uclid.xtext.Uclid.ConstDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getConstsDeclRuleAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConstsDeclRuleAccess().getConstantsConstDeclParserRuleCall_2_1_0());
					}
					lv_constants_3_0=ruleConstDecl
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstsDeclRuleRule());
						}
						add(
							$current,
							"constants",
							lv_constants_3_0,
							"uclid.xtext.Uclid.ConstDecl");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getConstsDeclRuleAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConstsDeclRuleAccess().getTTypeRuleParserRuleCall_4_0());
				}
				lv_t_5_0=ruleTypeRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstsDeclRuleRule());
					}
					set(
						$current,
						"t",
						lv_t_5_0,
						"uclid.xtext.Uclid.TypeRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6='='
			{
				newLeafNode(otherlv_6, grammarAccess.getConstsDeclRuleAccess().getEqualsSignKeyword_5_0());
			}
			this_INT_7=RULE_INT
			{
				newLeafNode(this_INT_7, grammarAccess.getConstsDeclRuleAccess().getINTTerminalRuleCall_5_1());
			}
		)?
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getConstsDeclRuleAccess().getSemicolonKeyword_6());
		}
	)
;

// Entry rule entryRuleConstDecl
entryRuleConstDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstDeclRule()); }
	iv_ruleConstDecl=ruleConstDecl
	{ $current=$iv_ruleConstDecl.current; }
	EOF;

// Rule ConstDecl
ruleConstDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getConstDeclAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getConstDeclRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleSharedVarsDeclRule
entryRuleSharedVarsDeclRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSharedVarsDeclRuleRule()); }
	iv_ruleSharedVarsDeclRule=ruleSharedVarsDeclRule
	{ $current=$iv_ruleSharedVarsDeclRule.current; }
	EOF;

// Rule SharedVarsDeclRule
ruleSharedVarsDeclRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='sharedvar'
		{
			newLeafNode(otherlv_0, grammarAccess.getSharedVarsDeclRuleAccess().getSharedvarKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSharedVarsDeclRuleAccess().getVarsVarDeclParserRuleCall_1_0_0());
					}
					lv_vars_1_0=ruleVarDecl
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSharedVarsDeclRuleRule());
						}
						add(
							$current,
							"vars",
							lv_vars_1_0,
							"uclid.xtext.Uclid.VarDecl");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2=','
				{
					newLeafNode(otherlv_2, grammarAccess.getSharedVarsDeclRuleAccess().getCommaKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSharedVarsDeclRuleAccess().getVarsVarDeclParserRuleCall_1_1_1_0());
						}
						lv_vars_3_0=ruleVarDecl
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSharedVarsDeclRuleRule());
							}
							add(
								$current,
								"vars",
								lv_vars_3_0,
								"uclid.xtext.Uclid.VarDecl");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getSharedVarsDeclRuleAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSharedVarsDeclRuleAccess().getTTypeRuleParserRuleCall_3_0());
				}
				lv_t_5_0=ruleTypeRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSharedVarsDeclRuleRule());
					}
					set(
						$current,
						"t",
						lv_t_5_0,
						"uclid.xtext.Uclid.TypeRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getSharedVarsDeclRuleAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleArgList
entryRuleArgList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgListRule()); }
	iv_ruleArgList=ruleArgList
	{ $current=$iv_ruleArgList.current; }
	EOF;

// Rule ArgList
ruleArgList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getArgListAccess().getArgsVarDeclParserRuleCall_0_0_0());
					}
					lv_args_0_0=ruleVarDecl
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArgListRule());
						}
						add(
							$current,
							"args",
							lv_args_0_0,
							"uclid.xtext.Uclid.VarDecl");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_1=','
				{
					newLeafNode(otherlv_1, grammarAccess.getArgListAccess().getCommaKeyword_0_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getArgListAccess().getArgsVarDeclParserRuleCall_0_1_1_0());
						}
						lv_args_2_0=ruleVarDecl
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getArgListRule());
							}
							add(
								$current,
								"args",
								lv_args_2_0,
								"uclid.xtext.Uclid.VarDecl");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getArgListAccess().getColonKeyword_0_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getArgListAccess().getTTypeRuleParserRuleCall_0_3_0());
					}
					lv_t_4_0=ruleTypeRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArgListRule());
						}
						set(
							$current,
							"t",
							lv_t_4_0,
							"uclid.xtext.Uclid.TypeRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getArgListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getArgListAccess().getArgsVarDeclParserRuleCall_1_1_0());
					}
					lv_args_6_0=ruleVarDecl
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArgListRule());
						}
						add(
							$current,
							"args",
							lv_args_6_0,
							"uclid.xtext.Uclid.VarDecl");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getArgListAccess().getCommaKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getArgListAccess().getArgsVarDeclParserRuleCall_1_2_1_0());
						}
						lv_args_8_0=ruleVarDecl
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getArgListRule());
							}
							add(
								$current,
								"args",
								lv_args_8_0,
								"uclid.xtext.Uclid.VarDecl");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9=':'
			{
				newLeafNode(otherlv_9, grammarAccess.getArgListAccess().getColonKeyword_1_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getArgListAccess().getTTypeRuleParserRuleCall_1_4_0());
					}
					lv_t_10_0=ruleTypeRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArgListRule());
						}
						set(
							$current,
							"t",
							lv_t_10_0,
							"uclid.xtext.Uclid.TypeRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)?
;

// Entry rule entryRuleDefineDeclRule
entryRuleDefineDeclRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefineDeclRuleRule()); }
	iv_ruleDefineDeclRule=ruleDefineDeclRule
	{ $current=$iv_ruleDefineDeclRule.current; }
	EOF;

// Rule DefineDeclRule
ruleDefineDeclRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='define'
		{
			newLeafNode(otherlv_0, grammarAccess.getDefineDeclRuleAccess().getDefineKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDefineDeclRuleAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDefineDeclRuleRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getDefineDeclRuleAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDefineDeclRuleAccess().getInputsArgListParserRuleCall_3_0());
				}
				lv_inputs_3_0=ruleArgList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefineDeclRuleRule());
					}
					set(
						$current,
						"inputs",
						lv_inputs_3_0,
						"uclid.xtext.Uclid.ArgList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getDefineDeclRuleAccess().getRightParenthesisKeyword_4());
		}
		otherlv_5=':'
		{
			newLeafNode(otherlv_5, grammarAccess.getDefineDeclRuleAccess().getColonKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDefineDeclRuleAccess().getTTypeRuleParserRuleCall_6_0());
				}
				lv_t_6_0=ruleTypeRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefineDeclRuleRule());
					}
					set(
						$current,
						"t",
						lv_t_6_0,
						"uclid.xtext.Uclid.TypeRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='='
		{
			newLeafNode(otherlv_7, grammarAccess.getDefineDeclRuleAccess().getEqualsSignKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDefineDeclRuleAccess().getEExprRuleParserRuleCall_8_0());
				}
				lv_e_8_0=ruleExprRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefineDeclRuleRule());
					}
					set(
						$current,
						"e",
						lv_e_8_0,
						"uclid.xtext.Uclid.ExprRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9=';'
		{
			newLeafNode(otherlv_9, grammarAccess.getDefineDeclRuleAccess().getSemicolonKeyword_9());
		}
	)
;

// Entry rule entryRuleFunctionDecl
entryRuleFunctionDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionDeclRule()); }
	iv_ruleFunctionDecl=ruleFunctionDecl
	{ $current=$iv_ruleFunctionDecl.current; }
	EOF;

// Rule FunctionDecl
ruleFunctionDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getFunctionDeclAccess().getFunctionDeclAction_0(),
					$current);
			}
		)
		(
			otherlv_1='synthesis'
			{
				newLeafNode(otherlv_1, grammarAccess.getFunctionDeclAccess().getSynthesisKeyword_1());
			}
		)?
		otherlv_2='function'
		{
			newLeafNode(otherlv_2, grammarAccess.getFunctionDeclAccess().getFunctionKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getFunctionDeclAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionDeclRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getFunctionDeclAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionDeclAccess().getInputsArgListParserRuleCall_5_0());
				}
				lv_inputs_5_0=ruleArgList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionDeclRule());
					}
					set(
						$current,
						"inputs",
						lv_inputs_5_0,
						"uclid.xtext.Uclid.ArgList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getFunctionDeclAccess().getRightParenthesisKeyword_6());
		}
		otherlv_7=':'
		{
			newLeafNode(otherlv_7, grammarAccess.getFunctionDeclAccess().getColonKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionDeclAccess().getTTypeRuleParserRuleCall_8_0());
				}
				lv_t_8_0=ruleTypeRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionDeclRule());
					}
					set(
						$current,
						"t",
						lv_t_8_0,
						"uclid.xtext.Uclid.TypeRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9=';'
		{
			newLeafNode(otherlv_9, grammarAccess.getFunctionDeclAccess().getSemicolonKeyword_9());
		}
	)
;

// Entry rule entryRuleProcedureDecl
entryRuleProcedureDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcedureDeclRule()); }
	iv_ruleProcedureDecl=ruleProcedureDecl
	{ $current=$iv_ruleProcedureDecl.current; }
	EOF;

// Rule ProcedureDecl
ruleProcedureDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getProcedureDeclAccess().getProcedureDeclAction_0(),
					$current);
			}
		)
		otherlv_1='procedure'
		{
			newLeafNode(otherlv_1, grammarAccess.getProcedureDeclAccess().getProcedureKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getProcedureDeclAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProcedureDeclRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getProcedureDeclAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcedureDeclAccess().getInputsArgListParserRuleCall_4_0());
				}
				lv_inputs_4_0=ruleArgList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcedureDeclRule());
					}
					set(
						$current,
						"inputs",
						lv_inputs_4_0,
						"uclid.xtext.Uclid.ArgList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getProcedureDeclAccess().getRightParenthesisKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcedureDeclAccess().getRetProcReturnArgRuleParserRuleCall_6_0());
				}
				lv_ret_6_0=ruleProcReturnArgRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcedureDeclRule());
					}
					set(
						$current,
						"ret",
						lv_ret_6_0,
						"uclid.xtext.Uclid.ProcReturnArgRule");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getProcedureDeclAccess().getReqRequireExprsRuleParserRuleCall_7_0());
				}
				lv_req_7_0=ruleRequireExprsRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcedureDeclRule());
					}
					add(
						$current,
						"req",
						lv_req_7_0,
						"uclid.xtext.Uclid.RequireExprsRule");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getProcedureDeclAccess().getEnsureEnsureExprsRuleParserRuleCall_8_0());
				}
				lv_ensure_8_0=ruleEnsureExprsRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcedureDeclRule());
					}
					add(
						$current,
						"ensure",
						lv_ensure_8_0,
						"uclid.xtext.Uclid.EnsureExprsRule");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getProcedureDeclAccess().getModifiesModifiesExprsRuleParserRuleCall_9_0());
				}
				lv_modifies_9_0=ruleModifiesExprsRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcedureDeclRule());
					}
					add(
						$current,
						"modifies",
						lv_modifies_9_0,
						"uclid.xtext.Uclid.ModifiesExprsRule");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getProcedureDeclAccess().getBodyBlkStmtRuleParserRuleCall_10_0());
				}
				lv_body_10_0=ruleBlkStmtRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcedureDeclRule());
					}
					set(
						$current,
						"body",
						lv_body_10_0,
						"uclid.xtext.Uclid.BlkStmtRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleProcReturnArgRule
entryRuleProcReturnArgRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcReturnArgRuleRule()); }
	iv_ruleProcReturnArgRule=ruleProcReturnArgRule
	{ $current=$iv_ruleProcReturnArgRule.current; }
	EOF;

// Rule ProcReturnArgRule
ruleProcReturnArgRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='returns'
		{
			newLeafNode(otherlv_0, grammarAccess.getProcReturnArgRuleAccess().getReturnsKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getProcReturnArgRuleAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcReturnArgRuleAccess().getOutputArgListParserRuleCall_2_0());
				}
				lv_output_2_0=ruleArgList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcReturnArgRuleRule());
					}
					set(
						$current,
						"output",
						lv_output_2_0,
						"uclid.xtext.Uclid.ArgList");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getProcReturnArgRuleAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleRequireExprsRule
entryRuleRequireExprsRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRequireExprsRuleRule()); }
	iv_ruleRequireExprsRule=ruleRequireExprsRule
	{ $current=$iv_ruleRequireExprsRule.current; }
	EOF;

// Rule RequireExprsRule
ruleRequireExprsRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='requires'
		{
			newLeafNode(otherlv_0, grammarAccess.getRequireExprsRuleAccess().getRequiresKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRequireExprsRuleAccess().getEExprRuleParserRuleCall_1_0());
				}
				lv_e_1_0=ruleExprRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRequireExprsRuleRule());
					}
					set(
						$current,
						"e",
						lv_e_1_0,
						"uclid.xtext.Uclid.ExprRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getRequireExprsRuleAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleEnsureExprsRule
entryRuleEnsureExprsRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnsureExprsRuleRule()); }
	iv_ruleEnsureExprsRule=ruleEnsureExprsRule
	{ $current=$iv_ruleEnsureExprsRule.current; }
	EOF;

// Rule EnsureExprsRule
ruleEnsureExprsRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ensures'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnsureExprsRuleAccess().getEnsuresKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnsureExprsRuleAccess().getEExprRuleParserRuleCall_1_0());
				}
				lv_e_1_0=ruleExprRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnsureExprsRuleRule());
					}
					set(
						$current,
						"e",
						lv_e_1_0,
						"uclid.xtext.Uclid.ExprRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getEnsureExprsRuleAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleModifiesExprsRule
entryRuleModifiesExprsRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModifiesExprsRuleRule()); }
	iv_ruleModifiesExprsRule=ruleModifiesExprsRule
	{ $current=$iv_ruleModifiesExprsRule.current; }
	EOF;

// Rule ModifiesExprsRule
ruleModifiesExprsRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='modifies'
		{
			newLeafNode(otherlv_0, grammarAccess.getModifiesExprsRuleAccess().getModifiesKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModifiesExprsRuleAccess().getLIdListRuleParserRuleCall_1_0());
				}
				lv_l_1_0=ruleIdListRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModifiesExprsRuleRule());
					}
					set(
						$current,
						"l",
						lv_l_1_0,
						"uclid.xtext.Uclid.IdListRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getModifiesExprsRuleAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleInstanceDeclRule
entryRuleInstanceDeclRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstanceDeclRuleRule()); }
	iv_ruleInstanceDeclRule=ruleInstanceDeclRule
	{ $current=$iv_ruleInstanceDeclRule.current; }
	EOF;

// Rule InstanceDeclRule
ruleInstanceDeclRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='instance'
		{
			newLeafNode(otherlv_0, grammarAccess.getInstanceDeclRuleAccess().getInstanceKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getInstanceDeclRuleAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInstanceDeclRuleRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getInstanceDeclRuleAccess().getColonKeyword_2());
		}
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInstanceDeclRuleRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getInstanceDeclRuleAccess().getModuleModuleCrossReference_3_0());
				}
				ruleFQN
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getInstanceDeclRuleAccess().getArgsArgMapListRuleParserRuleCall_4_0());
				}
				lv_args_4_0=ruleArgMapListRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInstanceDeclRuleRule());
					}
					add(
						$current,
						"args",
						lv_args_4_0,
						"uclid.xtext.Uclid.ArgMapListRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getInstanceDeclRuleAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleArgMapListRule
entryRuleArgMapListRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgMapListRuleRule()); }
	iv_ruleArgMapListRule=ruleArgMapListRule
	{ $current=$iv_ruleArgMapListRule.current; }
	EOF;

// Rule ArgMapListRule
ruleArgMapListRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getArgMapListRuleAccess().getArgMapListRuleAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getArgMapListRuleAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getArgMapListRuleAccess().getArgArgMapRuleParserRuleCall_2_0_0());
					}
					lv_arg_2_0=ruleArgMapRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArgMapListRuleRule());
						}
						add(
							$current,
							"arg",
							lv_arg_2_0,
							"uclid.xtext.Uclid.ArgMapRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getArgMapListRuleAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getArgMapListRuleAccess().getArgArgMapRuleParserRuleCall_2_1_1_0());
						}
						lv_arg_4_0=ruleArgMapRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getArgMapListRuleRule());
							}
							add(
								$current,
								"arg",
								lv_arg_4_0,
								"uclid.xtext.Uclid.ArgMapRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getArgMapListRuleAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleArgMapRule
entryRuleArgMapRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgMapRuleRule()); }
	iv_ruleArgMapRule=ruleArgMapRule
	{ $current=$iv_ruleArgMapRule.current; }
	EOF;

// Rule ArgMapRule
ruleArgMapRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getArgMapRuleAccess().getArgMapRuleAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getArgMapRuleAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArgMapRuleRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getArgMapRuleAccess().getColonKeyword_2());
		}
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getArgMapRuleAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getArgMapRuleAccess().getEExprRuleParserRuleCall_4_0());
				}
				lv_e_4_0=ruleExprRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArgMapRuleRule());
					}
					add(
						$current,
						"e",
						lv_e_4_0,
						"uclid.xtext.Uclid.ExprRule");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getArgMapRuleAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleAxiomDeclRule
entryRuleAxiomDeclRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAxiomDeclRuleRule()); }
	iv_ruleAxiomDeclRule=ruleAxiomDeclRule
	{ $current=$iv_ruleAxiomDeclRule.current; }
	EOF;

// Rule AxiomDeclRule
ruleAxiomDeclRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='axiom'
			{
				newLeafNode(otherlv_0, grammarAccess.getAxiomDeclRuleAccess().getAxiomKeyword_0_0());
			}
			    |
			otherlv_1='assume'
			{
				newLeafNode(otherlv_1, grammarAccess.getAxiomDeclRuleAccess().getAssumeKeyword_0_1());
			}
		)
		(
			(
				(
					lv_n_2_0=RULE_ID
					{
						newLeafNode(lv_n_2_0, grammarAccess.getAxiomDeclRuleAccess().getNIDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAxiomDeclRuleRule());
						}
						setWithLastConsumed(
							$current,
							"n",
							lv_n_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getAxiomDeclRuleAccess().getColonKeyword_1_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAxiomDeclRuleAccess().getEExprRuleParserRuleCall_2_0());
				}
				lv_e_4_0=ruleExprRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAxiomDeclRuleRule());
					}
					set(
						$current,
						"e",
						lv_e_4_0,
						"uclid.xtext.Uclid.ExprRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getAxiomDeclRuleAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleSpecDeclRule
entryRuleSpecDeclRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpecDeclRuleRule()); }
	iv_ruleSpecDeclRule=ruleSpecDeclRule
	{ $current=$iv_ruleSpecDeclRule.current; }
	EOF;

// Rule SpecDeclRule
ruleSpecDeclRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getSpecDeclRuleAccess().getPropertyRuleParserRuleCall_0());
		}
		this_PropertyRule_0=rulePropertyRule
		{
			$current = $this_PropertyRule_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getSpecDeclRuleAccess().getInvariantRuleParserRuleCall_1());
		}
		this_InvariantRule_1=ruleInvariantRule
		{
			$current = $this_InvariantRule_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePropertyRule
entryRulePropertyRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyRuleRule()); }
	iv_rulePropertyRule=rulePropertyRule
	{ $current=$iv_rulePropertyRule.current; }
	EOF;

// Rule PropertyRule
rulePropertyRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='property'
		{
			newLeafNode(otherlv_0, grammarAccess.getPropertyRuleAccess().getPropertyKeyword_0());
		}
		(
			otherlv_1='['
			{
				newLeafNode(otherlv_1, grammarAccess.getPropertyRuleAccess().getLeftSquareBracketKeyword_1_0());
			}
			(
				otherlv_2='LTL'
				{
					newLeafNode(otherlv_2, grammarAccess.getPropertyRuleAccess().getLTLKeyword_1_1_0());
				}
				    |
				otherlv_3='CTL'
				{
					newLeafNode(otherlv_3, grammarAccess.getPropertyRuleAccess().getCTLKeyword_1_1_1());
				}
			)
			otherlv_4=']'
			{
				newLeafNode(otherlv_4, grammarAccess.getPropertyRuleAccess().getRightSquareBracketKeyword_1_2());
			}
		)?
		(
			(
				(
					lv_name_5_0=RULE_ID
					{
						newLeafNode(lv_name_5_0, grammarAccess.getPropertyRuleAccess().getNameIDTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPropertyRuleRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_5_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_6=':'
			{
				newLeafNode(otherlv_6, grammarAccess.getPropertyRuleAccess().getColonKeyword_2_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertyRuleAccess().getEExprRuleParserRuleCall_3_0());
				}
				lv_e_7_0=ruleExprRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertyRuleRule());
					}
					set(
						$current,
						"e",
						lv_e_7_0,
						"uclid.xtext.Uclid.ExprRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getPropertyRuleAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleInvariantRule
entryRuleInvariantRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInvariantRuleRule()); }
	iv_ruleInvariantRule=ruleInvariantRule
	{ $current=$iv_ruleInvariantRule.current; }
	EOF;

// Rule InvariantRule
ruleInvariantRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='invariant'
		{
			newLeafNode(otherlv_0, grammarAccess.getInvariantRuleAccess().getInvariantKeyword_0());
		}
		(
			otherlv_1='['
			{
				newLeafNode(otherlv_1, grammarAccess.getInvariantRuleAccess().getLeftSquareBracketKeyword_1_0());
			}
			(
				otherlv_2='LTL'
				{
					newLeafNode(otherlv_2, grammarAccess.getInvariantRuleAccess().getLTLKeyword_1_1_0());
				}
				    |
				otherlv_3='CTL'
				{
					newLeafNode(otherlv_3, grammarAccess.getInvariantRuleAccess().getCTLKeyword_1_1_1());
				}
			)
			otherlv_4=']'
			{
				newLeafNode(otherlv_4, grammarAccess.getInvariantRuleAccess().getRightSquareBracketKeyword_1_2());
			}
		)?
		(
			(
				(
					lv_name_5_0=RULE_ID
					{
						newLeafNode(lv_name_5_0, grammarAccess.getInvariantRuleAccess().getNameIDTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInvariantRuleRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_5_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_6=':'
			{
				newLeafNode(otherlv_6, grammarAccess.getInvariantRuleAccess().getColonKeyword_2_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getInvariantRuleAccess().getEExprRuleParserRuleCall_3_0());
				}
				lv_e_7_0=ruleExprRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInvariantRuleRule());
					}
					set(
						$current,
						"e",
						lv_e_7_0,
						"uclid.xtext.Uclid.ExprRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getInvariantRuleAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleInitDeclRule
entryRuleInitDeclRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInitDeclRuleRule()); }
	iv_ruleInitDeclRule=ruleInitDeclRule
	{ $current=$iv_ruleInitDeclRule.current; }
	EOF;

// Rule InitDeclRule
ruleInitDeclRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='init'
		{
			newLeafNode(otherlv_0, grammarAccess.getInitDeclRuleAccess().getInitKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInitDeclRuleAccess().getBodyBlkStmtRuleParserRuleCall_1_0());
				}
				lv_body_1_0=ruleBlkStmtRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInitDeclRuleRule());
					}
					set(
						$current,
						"body",
						lv_body_1_0,
						"uclid.xtext.Uclid.BlkStmtRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNextDeclRule
entryRuleNextDeclRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNextDeclRuleRule()); }
	iv_ruleNextDeclRule=ruleNextDeclRule
	{ $current=$iv_ruleNextDeclRule.current; }
	EOF;

// Rule NextDeclRule
ruleNextDeclRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='next'
		{
			newLeafNode(otherlv_0, grammarAccess.getNextDeclRuleAccess().getNextKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNextDeclRuleAccess().getBodyBlkStmtRuleParserRuleCall_1_0());
				}
				lv_body_1_0=ruleBlkStmtRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNextDeclRuleRule());
					}
					set(
						$current,
						"body",
						lv_body_1_0,
						"uclid.xtext.Uclid.BlkStmtRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStatementRule
entryRuleStatementRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRuleRule()); }
	iv_ruleStatementRule=ruleStatementRule
	{ $current=$iv_ruleStatementRule.current; }
	EOF;

// Rule StatementRule
ruleStatementRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getStatementRuleAccess().getStatementRuleAction_0_0(),
						$current);
				}
			)
			otherlv_1='skip'
			{
				newLeafNode(otherlv_1, grammarAccess.getStatementRuleAccess().getSkipKeyword_0_1());
			}
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getStatementRuleAccess().getSemicolonKeyword_0_2());
			}
		)
		    |
		(
			otherlv_3='assert'
			{
				newLeafNode(otherlv_3, grammarAccess.getStatementRuleAccess().getAssertKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementRuleAccess().getDExprRuleParserRuleCall_1_1_0());
					}
					lv_d_4_0=ruleExprRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRuleRule());
						}
						set(
							$current,
							"d",
							lv_d_4_0,
							"uclid.xtext.Uclid.ExprRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=';'
			{
				newLeafNode(otherlv_5, grammarAccess.getStatementRuleAccess().getSemicolonKeyword_1_2());
			}
		)
		    |
		(
			otherlv_6='assume'
			{
				newLeafNode(otherlv_6, grammarAccess.getStatementRuleAccess().getAssumeKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementRuleAccess().getDExprRuleParserRuleCall_2_1_0());
					}
					lv_d_7_0=ruleExprRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRuleRule());
						}
						set(
							$current,
							"d",
							lv_d_7_0,
							"uclid.xtext.Uclid.ExprRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_8=';'
			{
				newLeafNode(otherlv_8, grammarAccess.getStatementRuleAccess().getSemicolonKeyword_2_2());
			}
		)
		    |
		(
			otherlv_9='havoc'
			{
				newLeafNode(otherlv_9, grammarAccess.getStatementRuleAccess().getHavocKeyword_3_0());
			}
			(
				(
					lv_name_10_0=RULE_ID
					{
						newLeafNode(lv_name_10_0, grammarAccess.getStatementRuleAccess().getNameIDTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStatementRuleRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_10_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_11=';'
			{
				newLeafNode(otherlv_11, grammarAccess.getStatementRuleAccess().getSemicolonKeyword_3_2());
			}
		)
		    |
		(
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getStatementRuleAccess().getAssignmentRuleParserRuleCall_4_0());
			}
			this_AssignmentRule_12=ruleAssignmentRule
			{
				$current = $this_AssignmentRule_12.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_13=';'
			{
				newLeafNode(otherlv_13, grammarAccess.getStatementRuleAccess().getSemicolonKeyword_4_1());
			}
		)
		    |
		(
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getStatementRuleAccess().getCallStatementParserRuleCall_5_0());
			}
			this_CallStatement_14=ruleCallStatement
			{
				$current = $this_CallStatement_14.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_15=';'
			{
				newLeafNode(otherlv_15, grammarAccess.getStatementRuleAccess().getSemicolonKeyword_5_1());
			}
		)
		    |
		(
			otherlv_16='next'
			{
				newLeafNode(otherlv_16, grammarAccess.getStatementRuleAccess().getNextKeyword_6_0());
			}
			otherlv_17='('
			{
				newLeafNode(otherlv_17, grammarAccess.getStatementRuleAccess().getLeftParenthesisKeyword_6_1());
			}
			(
				(
					lv_name_18_0=RULE_ID
					{
						newLeafNode(lv_name_18_0, grammarAccess.getStatementRuleAccess().getNameIDTerminalRuleCall_6_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStatementRuleRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_18_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_19=')'
			{
				newLeafNode(otherlv_19, grammarAccess.getStatementRuleAccess().getRightParenthesisKeyword_6_3());
			}
			otherlv_20=';'
			{
				newLeafNode(otherlv_20, grammarAccess.getStatementRuleAccess().getSemicolonKeyword_6_4());
			}
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementRuleAccess().getSIfStmtRuleParserRuleCall_7_0_0());
					}
					lv_s_21_0=ruleIfStmtRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRuleRule());
						}
						set(
							$current,
							"s",
							lv_s_21_0,
							"uclid.xtext.Uclid.IfStmtRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_22=';'
				{
					newLeafNode(otherlv_22, grammarAccess.getStatementRuleAccess().getSemicolonKeyword_7_1());
				}
			)?
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementRuleAccess().getSCaseStmtRuleParserRuleCall_8_0_0());
					}
					lv_s_23_0=ruleCaseStmtRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRuleRule());
						}
						set(
							$current,
							"s",
							lv_s_23_0,
							"uclid.xtext.Uclid.CaseStmtRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_24=';'
				{
					newLeafNode(otherlv_24, grammarAccess.getStatementRuleAccess().getSemicolonKeyword_8_1());
				}
			)?
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementRuleAccess().getSForLoopRuleParserRuleCall_9_0_0());
					}
					lv_s_25_0=ruleForLoopRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRuleRule());
						}
						set(
							$current,
							"s",
							lv_s_25_0,
							"uclid.xtext.Uclid.ForLoopRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_26=';'
				{
					newLeafNode(otherlv_26, grammarAccess.getStatementRuleAccess().getSemicolonKeyword_9_1());
				}
			)?
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementRuleAccess().getSWhileLoopRuleParserRuleCall_10_0_0());
					}
					lv_s_27_0=ruleWhileLoopRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRuleRule());
						}
						set(
							$current,
							"s",
							lv_s_27_0,
							"uclid.xtext.Uclid.WhileLoopRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_28=';'
				{
					newLeafNode(otherlv_28, grammarAccess.getStatementRuleAccess().getSemicolonKeyword_10_1());
				}
			)?
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementRuleAccess().getSBlkStmtRuleParserRuleCall_11_0_0());
					}
					lv_s_29_0=ruleBlkStmtRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRuleRule());
						}
						set(
							$current,
							"s",
							lv_s_29_0,
							"uclid.xtext.Uclid.BlkStmtRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_30=';'
				{
					newLeafNode(otherlv_30, grammarAccess.getStatementRuleAccess().getSemicolonKeyword_11_1());
				}
			)?
		)
	)
;

// Entry rule entryRuleCallStatement
entryRuleCallStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCallStatementRule()); }
	iv_ruleCallStatement=ruleCallStatement
	{ $current=$iv_ruleCallStatement.current; }
	EOF;

// Rule CallStatement
ruleCallStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getCallStatementAccess().getCallStatementAction_0(),
					$current);
			}
		)
		(
			otherlv_1='call'
			{
				newLeafNode(otherlv_1, grammarAccess.getCallStatementAccess().getCallKeyword_1_0());
			}
			(
				otherlv_2='('
				{
					newLeafNode(otherlv_2, grammarAccess.getCallStatementAccess().getLeftParenthesisKeyword_1_1_0());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getCallStatementAccess().getLhsVarReferenceParserRuleCall_1_1_1_0_0());
							}
							lv_lhs_3_0=ruleVarReference
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getCallStatementRule());
								}
								add(
									$current,
									"lhs",
									lv_lhs_3_0,
									"uclid.xtext.Uclid.VarReference");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_4=','
						{
							newLeafNode(otherlv_4, grammarAccess.getCallStatementAccess().getCommaKeyword_1_1_1_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getCallStatementAccess().getLhsVarReferenceParserRuleCall_1_1_1_1_1_0());
								}
								lv_lhs_5_0=ruleVarReference
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getCallStatementRule());
									}
									add(
										$current,
										"lhs",
										lv_lhs_5_0,
										"uclid.xtext.Uclid.VarReference");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
				)?
				otherlv_6=')'
				{
					newLeafNode(otherlv_6, grammarAccess.getCallStatementAccess().getRightParenthesisKeyword_1_1_2());
				}
				otherlv_7='='
				{
					newLeafNode(otherlv_7, grammarAccess.getCallStatementAccess().getEqualsSignKeyword_1_1_3());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getCallStatementAccess().getTargetFunctionReferenceParserRuleCall_1_2_0());
					}
					lv_target_8_0=ruleFunctionReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCallStatementRule());
						}
						set(
							$current,
							"target",
							lv_target_8_0,
							"uclid.xtext.Uclid.FunctionReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_9='('
				{
					newLeafNode(otherlv_9, grammarAccess.getCallStatementAccess().getLeftParenthesisKeyword_1_3_0());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getCallStatementAccess().getExprsExprRuleParserRuleCall_1_3_1_0_0());
							}
							lv_exprs_10_0=ruleExprRule
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getCallStatementRule());
								}
								add(
									$current,
									"exprs",
									lv_exprs_10_0,
									"uclid.xtext.Uclid.ExprRule");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_11=','
						{
							newLeafNode(otherlv_11, grammarAccess.getCallStatementAccess().getCommaKeyword_1_3_1_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getCallStatementAccess().getExprsExprRuleParserRuleCall_1_3_1_1_1_0());
								}
								lv_exprs_12_0=ruleExprRule
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getCallStatementRule());
									}
									add(
										$current,
										"exprs",
										lv_exprs_12_0,
										"uclid.xtext.Uclid.ExprRule");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
				)?
			)?
			otherlv_13=')'
			{
				newLeafNode(otherlv_13, grammarAccess.getCallStatementAccess().getRightParenthesisKeyword_1_4());
			}
		)
	)
;

// Entry rule entryRuleAssignmentRule
entryRuleAssignmentRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignmentRuleRule()); }
	iv_ruleAssignmentRule=ruleAssignmentRule
	{ $current=$iv_ruleAssignmentRule.current; }
	EOF;

// Rule AssignmentRule
ruleAssignmentRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getAssignmentRuleAccess().getAssignmentAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAssignmentRuleAccess().getLhsVarReferenceParserRuleCall_1_0_0());
					}
					lv_lhs_1_0=ruleVarReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssignmentRuleRule());
						}
						add(
							$current,
							"lhs",
							lv_lhs_1_0,
							"uclid.xtext.Uclid.VarReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2=','
				{
					newLeafNode(otherlv_2, grammarAccess.getAssignmentRuleAccess().getCommaKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAssignmentRuleAccess().getLhsVarReferenceParserRuleCall_1_1_1_0());
						}
						lv_lhs_3_0=ruleVarReference
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAssignmentRuleRule());
							}
							add(
								$current,
								"lhs",
								lv_lhs_3_0,
								"uclid.xtext.Uclid.VarReference");
							afterParserOrEnumRuleCall();
						}
					)
				)*
			)?
		)
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getAssignmentRuleAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignmentRuleAccess().getExprsExprRuleParserRuleCall_3_0());
				}
				lv_exprs_5_0=ruleExprRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignmentRuleRule());
					}
					add(
						$current,
						"exprs",
						lv_exprs_5_0,
						"uclid.xtext.Uclid.ExprRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getAssignmentRuleAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAssignmentRuleAccess().getExprsExprRuleParserRuleCall_4_1_0());
					}
					lv_exprs_7_0=ruleExprRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssignmentRuleRule());
						}
						add(
							$current,
							"exprs",
							lv_exprs_7_0,
							"uclid.xtext.Uclid.ExprRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleBlkStmtRule
entryRuleBlkStmtRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlkStmtRuleRule()); }
	iv_ruleBlkStmtRule=ruleBlkStmtRule
	{ $current=$iv_ruleBlkStmtRule.current; }
	EOF;

// Rule BlkStmtRule
ruleBlkStmtRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getBlkStmtRuleAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getBlkStmtRuleAccess().getCompoundStatementAction_1(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBlkStmtRuleAccess().getDecVarsDeclRuleParserRuleCall_2_0());
				}
				lv_dec_2_0=ruleVarsDeclRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBlkStmtRuleRule());
					}
					add(
						$current,
						"dec",
						lv_dec_2_0,
						"uclid.xtext.Uclid.VarsDeclRule");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getBlkStmtRuleAccess().getStmtStatementRuleParserRuleCall_3_0());
				}
				lv_stmt_3_0=ruleStatementRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBlkStmtRuleRule());
					}
					add(
						$current,
						"stmt",
						lv_stmt_3_0,
						"uclid.xtext.Uclid.StatementRule");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getBlkStmtRuleAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleIfStmtRule
entryRuleIfStmtRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfStmtRuleRule()); }
	iv_ruleIfStmtRule=ruleIfStmtRule
	{ $current=$iv_ruleIfStmtRule.current; }
	EOF;

// Rule IfStmtRule
ruleIfStmtRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfStmtRuleAccess().getIfKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getIfStmtRuleAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStmtRuleAccess().getCExprRuleParserRuleCall_2_0());
				}
				lv_c_2_0=ruleExprRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStmtRuleRule());
					}
					set(
						$current,
						"c",
						lv_c_2_0,
						"uclid.xtext.Uclid.ExprRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getIfStmtRuleAccess().getRightParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStmtRuleAccess().getThenBlkStmtRuleParserRuleCall_4_0());
				}
				lv_then_4_0=ruleBlkStmtRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStmtRuleRule());
					}
					set(
						$current,
						"then",
						lv_then_4_0,
						"uclid.xtext.Uclid.BlkStmtRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='else'
			{
				newLeafNode(otherlv_5, grammarAccess.getIfStmtRuleAccess().getElseKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIfStmtRuleAccess().getElseBlkStmtRuleParserRuleCall_5_1_0());
					}
					lv_else_6_0=ruleBlkStmtRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfStmtRuleRule());
						}
						set(
							$current,
							"else",
							lv_else_6_0,
							"uclid.xtext.Uclid.BlkStmtRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleCaseStmtRule
entryRuleCaseStmtRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCaseStmtRuleRule()); }
	iv_ruleCaseStmtRule=ruleCaseStmtRule
	{ $current=$iv_ruleCaseStmtRule.current; }
	EOF;

// Rule CaseStmtRule
ruleCaseStmtRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getCaseStmtRuleAccess().getCaseStmtRuleAction_0(),
					$current);
			}
		)
		otherlv_1='case'
		{
			newLeafNode(otherlv_1, grammarAccess.getCaseStmtRuleAccess().getCaseKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCaseStmtRuleAccess().getCasesCaseBlockRuleParserRuleCall_2_0_0());
					}
					lv_cases_2_1=ruleCaseBlockRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCaseStmtRuleRule());
						}
						add(
							$current,
							"cases",
							lv_cases_2_1,
							"uclid.xtext.Uclid.CaseBlockRule");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getCaseStmtRuleAccess().getCasesDefaultCaseBlockRuleParserRuleCall_2_0_1());
					}
					lv_cases_2_2=ruleDefaultCaseBlockRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCaseStmtRuleRule());
						}
						add(
							$current,
							"cases",
							lv_cases_2_2,
							"uclid.xtext.Uclid.DefaultCaseBlockRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_3='esac'
		{
			newLeafNode(otherlv_3, grammarAccess.getCaseStmtRuleAccess().getEsacKeyword_3());
		}
	)
;

// Entry rule entryRuleDefaultCaseBlockRule
entryRuleDefaultCaseBlockRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefaultCaseBlockRuleRule()); }
	iv_ruleDefaultCaseBlockRule=ruleDefaultCaseBlockRule
	{ $current=$iv_ruleDefaultCaseBlockRule.current; }
	EOF;

// Rule DefaultCaseBlockRule
ruleDefaultCaseBlockRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='default'
		{
			newLeafNode(otherlv_0, grammarAccess.getDefaultCaseBlockRuleAccess().getDefaultKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getDefaultCaseBlockRuleAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDefaultCaseBlockRuleAccess().getBodyBlkStmtRuleParserRuleCall_2_0());
				}
				lv_body_2_0=ruleBlkStmtRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefaultCaseBlockRuleRule());
					}
					set(
						$current,
						"body",
						lv_body_2_0,
						"uclid.xtext.Uclid.BlkStmtRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCaseBlockRule
entryRuleCaseBlockRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCaseBlockRuleRule()); }
	iv_ruleCaseBlockRule=ruleCaseBlockRule
	{ $current=$iv_ruleCaseBlockRule.current; }
	EOF;

// Rule CaseBlockRule
ruleCaseBlockRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCaseBlockRuleAccess().getEExprRuleParserRuleCall_0_0());
				}
				lv_e_0_0=ruleExprRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCaseBlockRuleRule());
					}
					set(
						$current,
						"e",
						lv_e_0_0,
						"uclid.xtext.Uclid.ExprRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getCaseBlockRuleAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCaseBlockRuleAccess().getBodyBlkStmtRuleParserRuleCall_2_0());
				}
				lv_body_2_0=ruleBlkStmtRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCaseBlockRuleRule());
					}
					set(
						$current,
						"body",
						lv_body_2_0,
						"uclid.xtext.Uclid.BlkStmtRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleForLoopRule
entryRuleForLoopRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForLoopRuleRule()); }
	iv_ruleForLoopRule=ruleForLoopRule
	{ $current=$iv_ruleForLoopRule.current; }
	EOF;

// Rule ForLoopRule
ruleForLoopRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='for'
		{
			newLeafNode(otherlv_0, grammarAccess.getForLoopRuleAccess().getForKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForLoopRuleAccess().getIteratorVarDeclParserRuleCall_1_0());
				}
				lv_iterator_1_0=ruleVarDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForLoopRuleRule());
					}
					set(
						$current,
						"iterator",
						lv_iterator_1_0,
						"uclid.xtext.Uclid.VarDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='in'
		{
			newLeafNode(otherlv_2, grammarAccess.getForLoopRuleAccess().getInKeyword_2());
		}
		otherlv_3='range'
		{
			newLeafNode(otherlv_3, grammarAccess.getForLoopRuleAccess().getRangeKeyword_3());
		}
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getForLoopRuleAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForLoopRuleAccess().getLbConstRuleParserRuleCall_5_0());
				}
				lv_lb_5_0=ruleConstRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForLoopRuleRule());
					}
					set(
						$current,
						"lb",
						lv_lb_5_0,
						"uclid.xtext.Uclid.ConstRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=','
		{
			newLeafNode(otherlv_6, grammarAccess.getForLoopRuleAccess().getCommaKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForLoopRuleAccess().getUbConstRuleParserRuleCall_7_0());
				}
				lv_ub_7_0=ruleConstRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForLoopRuleRule());
					}
					set(
						$current,
						"ub",
						lv_ub_7_0,
						"uclid.xtext.Uclid.ConstRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getForLoopRuleAccess().getRightParenthesisKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForLoopRuleAccess().getBodyBlkStmtRuleParserRuleCall_9_0());
				}
				lv_body_9_0=ruleBlkStmtRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForLoopRuleRule());
					}
					set(
						$current,
						"body",
						lv_body_9_0,
						"uclid.xtext.Uclid.BlkStmtRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleWhileLoopRule
entryRuleWhileLoopRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhileLoopRuleRule()); }
	iv_ruleWhileLoopRule=ruleWhileLoopRule
	{ $current=$iv_ruleWhileLoopRule.current; }
	EOF;

// Rule WhileLoopRule
ruleWhileLoopRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='while'
		{
			newLeafNode(otherlv_0, grammarAccess.getWhileLoopRuleAccess().getWhileKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getWhileLoopRuleAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileLoopRuleAccess().getCExprRuleParserRuleCall_2_0());
				}
				lv_c_2_0=ruleExprRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileLoopRuleRule());
					}
					set(
						$current,
						"c",
						lv_c_2_0,
						"uclid.xtext.Uclid.ExprRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getWhileLoopRuleAccess().getRightParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileLoopRuleAccess().getInvSpecDeclRuleParserRuleCall_4_0());
				}
				lv_inv_4_0=ruleSpecDeclRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileLoopRuleRule());
					}
					add(
						$current,
						"inv",
						lv_inv_4_0,
						"uclid.xtext.Uclid.SpecDeclRule");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileLoopRuleAccess().getStmtBlkStmtRuleParserRuleCall_5_0());
				}
				lv_stmt_5_0=ruleBlkStmtRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileLoopRuleRule());
					}
					set(
						$current,
						"stmt",
						lv_stmt_5_0,
						"uclid.xtext.Uclid.BlkStmtRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExprRule
entryRuleExprRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprRuleRule()); }
	iv_ruleExprRule=ruleExprRule
	{ $current=$iv_ruleExprRule.current; }
	EOF;

// Rule ExprRule
ruleExprRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		/* */
	}
	{
		newCompositeNode(grammarAccess.getExprRuleAccess().getE1RuleParserRuleCall());
	}
	this_E1Rule_0=ruleE1Rule
	{
		$current = $this_E1Rule_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleE1Rule
entryRuleE1Rule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getE1RuleRule()); }
	iv_ruleE1Rule=ruleE1Rule
	{ $current=$iv_ruleE1Rule.current; }
	EOF;

// Rule E1Rule
ruleE1Rule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getE1RuleAccess().getE2RuleParserRuleCall_0());
		}
		this_E2Rule_0=ruleE2Rule
		{
			$current = $this_E2Rule_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				(
					(
						lv_pred_1_1='forall'
						{
							newLeafNode(lv_pred_1_1, grammarAccess.getE1RuleAccess().getPredForallKeyword_1_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getE1RuleRule());
							}
							setWithLastConsumed($current, "pred", lv_pred_1_1, null);
						}
						    |
						lv_pred_1_2='exists'
						{
							newLeafNode(lv_pred_1_2, grammarAccess.getE1RuleAccess().getPredExistsKeyword_1_0_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getE1RuleRule());
							}
							setWithLastConsumed($current, "pred", lv_pred_1_2, null);
						}
					)
				)
			)
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getE1RuleAccess().getLeftParenthesisKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getE1RuleAccess().getExistentialArgListParserRuleCall_1_2_0());
					}
					lv_existential_3_0=ruleArgList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getE1RuleRule());
						}
						set(
							$current,
							"existential",
							lv_existential_3_0,
							"uclid.xtext.Uclid.ArgList");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getE1RuleAccess().getRightParenthesisKeyword_1_3());
			}
			otherlv_5='::'
			{
				newLeafNode(otherlv_5, grammarAccess.getE1RuleAccess().getColonColonKeyword_1_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getE1RuleAccess().getAE1RuleParserRuleCall_1_5_0());
					}
					lv_a_6_0=ruleE1Rule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getE1RuleRule());
						}
						set(
							$current,
							"a",
							lv_a_6_0,
							"uclid.xtext.Uclid.E1Rule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_pred_7_0='const'
					{
						newLeafNode(lv_pred_7_0, grammarAccess.getE1RuleAccess().getPredConstKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getE1RuleRule());
						}
						setWithLastConsumed($current, "pred", lv_pred_7_0, "const");
					}
				)
			)
			otherlv_8='('
			{
				newLeafNode(otherlv_8, grammarAccess.getE1RuleAccess().getLeftParenthesisKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getE1RuleAccess().getExistentialExprListRuleParserRuleCall_2_2_0());
					}
					lv_existential_9_0=ruleExprListRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getE1RuleRule());
						}
						set(
							$current,
							"existential",
							lv_existential_9_0,
							"uclid.xtext.Uclid.ExprListRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_10=')'
			{
				newLeafNode(otherlv_10, grammarAccess.getE1RuleAccess().getRightParenthesisKeyword_2_3());
			}
		)
	)
;

// Entry rule entryRuleE2Rule
entryRuleE2Rule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getE2RuleRule()); }
	iv_ruleE2Rule=ruleE2Rule
	{ $current=$iv_ruleE2Rule.current; }
	EOF;

// Rule E2Rule
ruleE2Rule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getE2RuleAccess().getZE3RuleParserRuleCall_0_0());
				}
				lv_z_0_0=ruleE3Rule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getE2RuleRule());
					}
					add(
						$current,
						"z",
						lv_z_0_0,
						"uclid.xtext.Uclid.E3Rule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_op_1_0=RULE_LOGEQU
					{
						newLeafNode(lv_op_1_0, grammarAccess.getE2RuleAccess().getOpLOGEQUTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getE2RuleRule());
						}
						setWithLastConsumed(
							$current,
							"op",
							lv_op_1_0,
							"uclid.xtext.Uclid.LOGEQU");
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getE2RuleAccess().getQE2RuleParserRuleCall_1_1_0_0());
						}
						lv_q_2_1=ruleE2Rule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getE2RuleRule());
							}
							add(
								$current,
								"q",
								lv_q_2_1,
								"uclid.xtext.Uclid.E2Rule");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getE2RuleAccess().getQE3RuleParserRuleCall_1_1_0_1());
						}
						lv_q_2_2=ruleE3Rule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getE2RuleRule());
							}
							add(
								$current,
								"q",
								lv_q_2_2,
								"uclid.xtext.Uclid.E3Rule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleE3Rule
entryRuleE3Rule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getE3RuleRule()); }
	iv_ruleE3Rule=ruleE3Rule
	{ $current=$iv_ruleE3Rule.current; }
	EOF;

// Rule E3Rule
ruleE3Rule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getE3RuleAccess().getEE4RuleParserRuleCall_0_0());
				}
				lv_e_0_0=ruleE4Rule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getE3RuleRule());
					}
					add(
						$current,
						"e",
						lv_e_0_0,
						"uclid.xtext.Uclid.E4Rule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_op_1_0=RULE_LOGIMPLY
					{
						newLeafNode(lv_op_1_0, grammarAccess.getE3RuleAccess().getOpLOGIMPLYTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getE3RuleRule());
						}
						setWithLastConsumed(
							$current,
							"op",
							lv_op_1_0,
							"uclid.xtext.Uclid.LOGIMPLY");
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getE3RuleAccess().getEE3RuleParserRuleCall_1_1_0_0());
						}
						lv_e_2_1=ruleE3Rule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getE3RuleRule());
							}
							add(
								$current,
								"e",
								lv_e_2_1,
								"uclid.xtext.Uclid.E3Rule");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getE3RuleAccess().getEE4RuleParserRuleCall_1_1_0_1());
						}
						lv_e_2_2=ruleE4Rule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getE3RuleRule());
							}
							add(
								$current,
								"e",
								lv_e_2_2,
								"uclid.xtext.Uclid.E4Rule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleE4Rule
entryRuleE4Rule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getE4RuleRule()); }
	iv_ruleE4Rule=ruleE4Rule
	{ $current=$iv_ruleE4Rule.current; }
	EOF;

// Rule E4Rule
ruleE4Rule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getE4RuleAccess().getEE5RuleParserRuleCall_0_0_0());
					}
					lv_e_0_0=ruleE5Rule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getE4RuleRule());
						}
						add(
							$current,
							"e",
							lv_e_0_0,
							"uclid.xtext.Uclid.E5Rule");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1='&&'
			{
				newLeafNode(otherlv_1, grammarAccess.getE4RuleAccess().getAmpersandAmpersandKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getE4RuleAccess().getEE4RuleParserRuleCall_0_2_0());
					}
					lv_e_2_0=ruleE4Rule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getE4RuleRule());
						}
						add(
							$current,
							"e",
							lv_e_2_0,
							"uclid.xtext.Uclid.E4Rule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getE4RuleAccess().getEE5RuleParserRuleCall_1_0_0());
					}
					lv_e_3_0=ruleE5Rule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getE4RuleRule());
						}
						add(
							$current,
							"e",
							lv_e_3_0,
							"uclid.xtext.Uclid.E5Rule");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4='||'
			{
				newLeafNode(otherlv_4, grammarAccess.getE4RuleAccess().getVerticalLineVerticalLineKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getE4RuleAccess().getEE4RuleParserRuleCall_1_2_0());
					}
					lv_e_5_0=ruleE4Rule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getE4RuleRule());
						}
						add(
							$current,
							"e",
							lv_e_5_0,
							"uclid.xtext.Uclid.E4Rule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getE4RuleAccess().getEE5RuleParserRuleCall_2_0_0());
					}
					lv_e_6_0=ruleE5Rule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getE4RuleRule());
						}
						add(
							$current,
							"e",
							lv_e_6_0,
							"uclid.xtext.Uclid.E5Rule");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7='&'
			{
				newLeafNode(otherlv_7, grammarAccess.getE4RuleAccess().getAmpersandKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getE4RuleAccess().getEE4RuleParserRuleCall_2_2_0());
					}
					lv_e_8_0=ruleE4Rule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getE4RuleRule());
						}
						add(
							$current,
							"e",
							lv_e_8_0,
							"uclid.xtext.Uclid.E4Rule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getE4RuleAccess().getEE5RuleParserRuleCall_3_0_0());
					}
					lv_e_9_0=ruleE5Rule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getE4RuleRule());
						}
						add(
							$current,
							"e",
							lv_e_9_0,
							"uclid.xtext.Uclid.E5Rule");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_10='|'
			{
				newLeafNode(otherlv_10, grammarAccess.getE4RuleAccess().getVerticalLineKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getE4RuleAccess().getEE4RuleParserRuleCall_3_2_0());
					}
					lv_e_11_0=ruleE4Rule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getE4RuleRule());
						}
						add(
							$current,
							"e",
							lv_e_11_0,
							"uclid.xtext.Uclid.E4Rule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getE4RuleAccess().getEE5RuleParserRuleCall_4_0_0());
					}
					lv_e_12_0=ruleE5Rule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getE4RuleRule());
						}
						add(
							$current,
							"e",
							lv_e_12_0,
							"uclid.xtext.Uclid.E5Rule");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_13='^'
			{
				newLeafNode(otherlv_13, grammarAccess.getE4RuleAccess().getCircumflexAccentKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getE4RuleAccess().getEE4RuleParserRuleCall_4_2_0());
					}
					lv_e_14_0=ruleE4Rule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getE4RuleRule());
						}
						add(
							$current,
							"e",
							lv_e_14_0,
							"uclid.xtext.Uclid.E4Rule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getE4RuleAccess().getEE5RuleParserRuleCall_5_0());
				}
				lv_e_15_0=ruleE5Rule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getE4RuleRule());
					}
					add(
						$current,
						"e",
						lv_e_15_0,
						"uclid.xtext.Uclid.E5Rule");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleE5Rule
entryRuleE5Rule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getE5RuleRule()); }
	iv_ruleE5Rule=ruleE5Rule
	{ $current=$iv_ruleE5Rule.current; }
	EOF;

// Rule E5Rule
ruleE5Rule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getE5RuleAccess().getEE6RuleParserRuleCall_0_0());
				}
				lv_e_0_0=ruleE6Rule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getE5RuleRule());
					}
					add(
						$current,
						"e",
						lv_e_0_0,
						"uclid.xtext.Uclid.E6Rule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_op_1_0=RULE_REL_OP_RULE
					{
						newLeafNode(lv_op_1_0, grammarAccess.getE5RuleAccess().getOpREL_OP_RULETerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getE5RuleRule());
						}
						setWithLastConsumed(
							$current,
							"op",
							lv_op_1_0,
							"uclid.xtext.Uclid.REL_OP_RULE");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getE5RuleAccess().getEE6RuleParserRuleCall_1_1_0());
					}
					lv_e_2_0=ruleE6Rule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getE5RuleRule());
						}
						add(
							$current,
							"e",
							lv_e_2_0,
							"uclid.xtext.Uclid.E6Rule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleE6Rule
entryRuleE6Rule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getE6RuleRule()); }
	iv_ruleE6Rule=ruleE6Rule
	{ $current=$iv_ruleE6Rule.current; }
	EOF;

// Rule E6Rule
ruleE6Rule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getE6RuleAccess().getEE7RuleParserRuleCall_0_0());
				}
				lv_e_0_0=ruleE7Rule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getE6RuleRule());
					}
					add(
						$current,
						"e",
						lv_e_0_0,
						"uclid.xtext.Uclid.E7Rule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='++'
			{
				newLeafNode(otherlv_1, grammarAccess.getE6RuleAccess().getPlusSignPlusSignKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getE6RuleAccess().getEE6RuleParserRuleCall_1_1_0());
					}
					lv_e_2_0=ruleE6Rule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getE6RuleRule());
						}
						add(
							$current,
							"e",
							lv_e_2_0,
							"uclid.xtext.Uclid.E6Rule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleE7Rule
entryRuleE7Rule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getE7RuleRule()); }
	iv_ruleE7Rule=ruleE7Rule
	{ $current=$iv_ruleE7Rule.current; }
	EOF;

// Rule E7Rule
ruleE7Rule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getE7RuleAccess().getEE8RuleParserRuleCall_0_0());
				}
				lv_e_0_0=ruleE8Rule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getE7RuleRule());
					}
					add(
						$current,
						"e",
						lv_e_0_0,
						"uclid.xtext.Uclid.E8Rule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='+'
			{
				newLeafNode(otherlv_1, grammarAccess.getE7RuleAccess().getPlusSignKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getE7RuleAccess().getEE7RuleParserRuleCall_1_1_0());
					}
					lv_e_2_0=ruleE7Rule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getE7RuleRule());
						}
						add(
							$current,
							"e",
							lv_e_2_0,
							"uclid.xtext.Uclid.E7Rule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleE8Rule
entryRuleE8Rule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getE8RuleRule()); }
	iv_ruleE8Rule=ruleE8Rule
	{ $current=$iv_ruleE8Rule.current; }
	EOF;

// Rule E8Rule
ruleE8Rule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getE8RuleAccess().getEE9RuleParserRuleCall_0_0());
				}
				lv_e_0_0=ruleE9Rule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getE8RuleRule());
					}
					add(
						$current,
						"e",
						lv_e_0_0,
						"uclid.xtext.Uclid.E9Rule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='-'
			{
				newLeafNode(otherlv_1, grammarAccess.getE8RuleAccess().getHyphenMinusKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getE8RuleAccess().getEE9RuleParserRuleCall_1_1_0());
					}
					lv_e_2_0=ruleE9Rule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getE8RuleRule());
						}
						add(
							$current,
							"e",
							lv_e_2_0,
							"uclid.xtext.Uclid.E9Rule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleE9Rule
entryRuleE9Rule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getE9RuleRule()); }
	iv_ruleE9Rule=ruleE9Rule
	{ $current=$iv_ruleE9Rule.current; }
	EOF;

// Rule E9Rule
ruleE9Rule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getE9RuleAccess().getEE10RuleParserRuleCall_0_0());
				}
				lv_e_0_0=ruleE10Rule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getE9RuleRule());
					}
					add(
						$current,
						"e",
						lv_e_0_0,
						"uclid.xtext.Uclid.E10Rule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='*'
			{
				newLeafNode(otherlv_1, grammarAccess.getE9RuleAccess().getAsteriskKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getE9RuleAccess().getEE10RuleParserRuleCall_1_1_0());
					}
					lv_e_2_0=ruleE10Rule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getE9RuleRule());
						}
						add(
							$current,
							"e",
							lv_e_2_0,
							"uclid.xtext.Uclid.E10Rule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleE10Rule
entryRuleE10Rule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getE10RuleRule()); }
	iv_ruleE10Rule=ruleE10Rule
	{ $current=$iv_ruleE10Rule.current; }
	EOF;

// Rule E10Rule
ruleE10Rule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						lv_op_0_1='-'
						{
							newLeafNode(lv_op_0_1, grammarAccess.getE10RuleAccess().getOpHyphenMinusKeyword_0_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getE10RuleRule());
							}
							setWithLastConsumed($current, "op", lv_op_0_1, null);
						}
						    |
						lv_op_0_2='!'
						{
							newLeafNode(lv_op_0_2, grammarAccess.getE10RuleAccess().getOpExclamationMarkKeyword_0_0_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getE10RuleRule());
							}
							setWithLastConsumed($current, "op", lv_op_0_2, null);
						}
						    |
						lv_op_0_3='~'
						{
							newLeafNode(lv_op_0_3, grammarAccess.getE10RuleAccess().getOpTildeKeyword_0_0_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getE10RuleRule());
							}
							setWithLastConsumed($current, "op", lv_op_0_3, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getE10RuleAccess().getEE11RuleParserRuleCall_0_1_0());
					}
					lv_e_1_0=ruleE11Rule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getE10RuleRule());
						}
						set(
							$current,
							"e",
							lv_e_1_0,
							"uclid.xtext.Uclid.E11Rule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getE10RuleAccess().getEE11RuleParserRuleCall_1_0());
				}
				lv_e_2_0=ruleE11Rule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getE10RuleRule());
					}
					set(
						$current,
						"e",
						lv_e_2_0,
						"uclid.xtext.Uclid.E11Rule");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleE11Rule
entryRuleE11Rule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getE11RuleRule()); }
	iv_ruleE11Rule=ruleE11Rule
	{ $current=$iv_ruleE11Rule.current; }
	EOF;

// Rule E11Rule
ruleE11Rule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getE11RuleAccess().getE12RuleParserRuleCall_0());
		}
		this_E12Rule_0=ruleE12Rule
		{
			$current = $this_E12Rule_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			otherlv_1='['
			{
				newLeafNode(otherlv_1, grammarAccess.getE11RuleAccess().getLeftSquareBracketKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getE11RuleAccess().getLExprListRuleParserRuleCall_1_1_0());
					}
					lv_l_2_0=ruleExprListRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getE11RuleRule());
						}
						add(
							$current,
							"l",
							lv_l_2_0,
							"uclid.xtext.Uclid.ExprListRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					otherlv_3='->'
					{
						newLeafNode(otherlv_3, grammarAccess.getE11RuleAccess().getHyphenMinusGreaterThanSignKeyword_1_2_0_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getE11RuleAccess().getEExprRuleParserRuleCall_1_2_0_1_0());
							}
							lv_e_4_0=ruleExprRule
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getE11RuleRule());
								}
								add(
									$current,
									"e",
									lv_e_4_0,
									"uclid.xtext.Uclid.ExprRule");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				    |
				(
					otherlv_5=':'
					{
						newLeafNode(otherlv_5, grammarAccess.getE11RuleAccess().getColonKeyword_1_2_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getE11RuleAccess().getEExprRuleParserRuleCall_1_2_1_1_0());
							}
							lv_e_6_0=ruleExprRule
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getE11RuleRule());
								}
								add(
									$current,
									"e",
									lv_e_6_0,
									"uclid.xtext.Uclid.ExprRule");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)?
			otherlv_7=']'
			{
				newLeafNode(otherlv_7, grammarAccess.getE11RuleAccess().getRightSquareBracketKeyword_1_3());
			}
		)?
	)
;

// Entry rule entryRuleE12Rule
entryRuleE12Rule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getE12RuleRule()); }
	iv_ruleE12Rule=ruleE12Rule
	{ $current=$iv_ruleE12Rule.current; }
	EOF;

// Rule E12Rule
ruleE12Rule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getE12RuleAccess().getJE13RuleParserRuleCall_0_0());
				}
				lv_j_0_0=ruleE13Rule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getE12RuleRule());
					}
					set(
						$current,
						"j",
						lv_j_0_0,
						"uclid.xtext.Uclid.E13Rule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getE12RuleAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getE12RuleAccess().getVExprListRuleParserRuleCall_1_1_0());
					}
					lv_v_2_0=ruleExprListRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getE12RuleRule());
						}
						set(
							$current,
							"v",
							lv_v_2_0,
							"uclid.xtext.Uclid.ExprListRule");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getE12RuleAccess().getRightParenthesisKeyword_1_2());
			}
		)?
	)
;

// Entry rule entryRuleRHSVarRef
entryRuleRHSVarRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRHSVarRefRule()); }
	iv_ruleRHSVarRef=ruleRHSVarRef
	{ $current=$iv_ruleRHSVarRef.current; }
	EOF;

// Rule RHSVarRef
ruleRHSVarRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		/* */
	}
	{
		newCompositeNode(grammarAccess.getRHSVarRefAccess().getFQNParserRuleCall());
	}
	ruleFQN
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleFunctionReference
entryRuleFunctionReference returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFunctionReferenceRule()); }
	iv_ruleFunctionReference=ruleFunctionReference
	{ $current=$iv_ruleFunctionReference.current.getText(); }
	EOF;

// Rule FunctionReference
ruleFunctionReference returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getFunctionReferenceAccess().getFQNParserRuleCall());
	}
	this_FQN_0=ruleFQN
	{
		$current.merge(this_FQN_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleTypeReference
entryRuleTypeReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeReferenceRule()); }
	iv_ruleTypeReference=ruleTypeReference
	{ $current=$iv_ruleTypeReference.current; }
	EOF;

// Rule TypeReference
ruleTypeReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getTypeReferenceAccess().getDeclFQNParserRuleCall_0());
			}
			lv_decl_0_0=ruleFQN
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getTypeReferenceRule());
				}
				set(
					$current,
					"decl",
					lv_decl_0_0,
					"uclid.xtext.Uclid.FQN");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleVarReference
entryRuleVarReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarReferenceRule()); }
	iv_ruleVarReference=ruleVarReference
	{ $current=$iv_ruleVarReference.current; }
	EOF;

// Rule VarReference
ruleVarReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getVarReferenceAccess().getFQNParserRuleCall_0());
		}
		ruleFQN
		{
			afterParserOrEnumRuleCall();
		}
		(
			otherlv_1='['
			{
				newLeafNode(otherlv_1, grammarAccess.getVarReferenceAccess().getLeftSquareBracketKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVarReferenceAccess().getIndexExprRuleParserRuleCall_1_1_0());
					}
					lv_index_2_0=ruleExprRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVarReferenceRule());
						}
						add(
							$current,
							"index",
							lv_index_2_0,
							"uclid.xtext.Uclid.ExprRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getVarReferenceAccess().getCommaKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getVarReferenceAccess().getIndexExprRuleParserRuleCall_1_2_1_0());
						}
						lv_index_4_0=ruleExprRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVarReferenceRule());
							}
							add(
								$current,
								"index",
								lv_index_4_0,
								"uclid.xtext.Uclid.ExprRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_5=']'
			{
				newLeafNode(otherlv_5, grammarAccess.getVarReferenceAccess().getRightSquareBracketKeyword_1_3());
			}
		)?
		(
			otherlv_6='\''
			{
				newLeafNode(otherlv_6, grammarAccess.getVarReferenceAccess().getApostropheKeyword_2());
			}
		)?
	)
;

// Entry rule entryRuleE13Rule
entryRuleE13Rule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getE13RuleRule()); }
	iv_ruleE13Rule=ruleE13Rule
	{ $current=$iv_ruleE13Rule.current; }
	EOF;

// Rule E13Rule
ruleE13Rule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getE13RuleAccess().getConstRuleParserRuleCall_0());
		}
		this_ConstRule_0=ruleConstRule
		{
			$current = $this_ConstRule_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getE13RuleAccess().getRHSVarRefParserRuleCall_1());
		}
		this_RHSVarRef_1=ruleRHSVarRef
		{
			$current = $this_RHSVarRef_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getE13RuleAccess().getFunctionReferenceParserRuleCall_2());
		}
		ruleFunctionReference
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getE13RuleAccess().getEnumRefParserRuleCall_3());
		}
		this_EnumRef_3=ruleEnumRef
		{
			$current = $this_EnumRef_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getE13RuleAccess().getTupleExprParserRuleCall_4());
		}
		this_TupleExpr_4=ruleTupleExpr
		{
			$current = $this_TupleExpr_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getE13RuleAccess().getIfPrimaryExprParserRuleCall_5());
		}
		this_IfPrimaryExpr_5=ruleIfPrimaryExpr
		{
			$current = $this_IfPrimaryExpr_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getE13RuleAccess().getParenthesisExprParserRuleCall_6());
		}
		this_ParenthesisExpr_6=ruleParenthesisExpr
		{
			$current = $this_ParenthesisExpr_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEnumRef
entryRuleEnumRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumRefRule()); }
	iv_ruleEnumRef=ruleEnumRef
	{ $current=$iv_ruleEnumRef.current; }
	EOF;

// Rule EnumRef
ruleEnumRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getEnumRefRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getEnumRefAccess().get_enumEnumValueCrossReference_0());
			}
			ruleFQN
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleTupleExpr
entryRuleTupleExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTupleExprRule()); }
	iv_ruleTupleExpr=ruleTupleExpr
	{ $current=$iv_ruleTupleExpr.current; }
	EOF;

// Rule TupleExpr
ruleTupleExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getTupleExprAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTupleExprAccess().getEExprRuleParserRuleCall_1_0());
				}
				lv_e_1_0=ruleExprRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTupleExprRule());
					}
					add(
						$current,
						"e",
						lv_e_1_0,
						"uclid.xtext.Uclid.ExprRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getTupleExprAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTupleExprAccess().getEExprRuleParserRuleCall_2_1_0());
					}
					lv_e_3_0=ruleExprRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTupleExprRule());
						}
						add(
							$current,
							"e",
							lv_e_3_0,
							"uclid.xtext.Uclid.ExprRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getTupleExprAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleIfPrimaryExpr
entryRuleIfPrimaryExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfPrimaryExprRule()); }
	iv_ruleIfPrimaryExpr=ruleIfPrimaryExpr
	{ $current=$iv_ruleIfPrimaryExpr.current; }
	EOF;

// Rule IfPrimaryExpr
ruleIfPrimaryExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfPrimaryExprAccess().getIfKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getIfPrimaryExprAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfPrimaryExprAccess().getCExprRuleParserRuleCall_2_0());
				}
				lv_c_2_0=ruleExprRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfPrimaryExprRule());
					}
					set(
						$current,
						"c",
						lv_c_2_0,
						"uclid.xtext.Uclid.ExprRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getIfPrimaryExprAccess().getRightParenthesisKeyword_3());
		}
		otherlv_4='then'
		{
			newLeafNode(otherlv_4, grammarAccess.getIfPrimaryExprAccess().getThenKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfPrimaryExprAccess().getEExprRuleParserRuleCall_5_0());
				}
				lv_e_5_0=ruleExprRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfPrimaryExprRule());
					}
					add(
						$current,
						"e",
						lv_e_5_0,
						"uclid.xtext.Uclid.ExprRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='else'
		{
			newLeafNode(otherlv_6, grammarAccess.getIfPrimaryExprAccess().getElseKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfPrimaryExprAccess().getEExprRuleParserRuleCall_7_0());
				}
				lv_e_7_0=ruleExprRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfPrimaryExprRule());
					}
					add(
						$current,
						"e",
						lv_e_7_0,
						"uclid.xtext.Uclid.ExprRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleParenthesisExpr
entryRuleParenthesisExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParenthesisExprRule()); }
	iv_ruleParenthesisExpr=ruleParenthesisExpr
	{ $current=$iv_ruleParenthesisExpr.current; }
	EOF;

// Rule ParenthesisExpr
ruleParenthesisExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getParenthesisExprAccess().getLeftParenthesisKeyword_0());
		}
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getParenthesisExprAccess().getExprRuleParserRuleCall_1());
		}
		this_ExprRule_1=ruleExprRule
		{
			$current = $this_ExprRule_1.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getParenthesisExprAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleConstRule
entryRuleConstRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstRuleRule()); }
	iv_ruleConstRule=ruleConstRule
	{ $current=$iv_ruleConstRule.current; }
	EOF;

// Rule ConstRule
ruleConstRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_v_0_0='false'
				{
					newLeafNode(lv_v_0_0, grammarAccess.getConstRuleAccess().getVFalseKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConstRuleRule());
					}
					setWithLastConsumed($current, "v", lv_v_0_0, "false");
				}
			)
		)
		    |
		(
			(
				lv_v_1_0='true'
				{
					newLeafNode(lv_v_1_0, grammarAccess.getConstRuleAccess().getVTrueKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConstRuleRule());
					}
					setWithLastConsumed($current, "v", lv_v_1_0, "true");
				}
			)
		)
		    |
		(
			(
				(
					lv_d_2_0=RULE_INT
					{
						newLeafNode(lv_d_2_0, grammarAccess.getConstRuleAccess().getDINTTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConstRuleRule());
						}
						setWithLastConsumed(
							$current,
							"d",
							lv_d_2_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			(
				(
					lv_w_3_0=RULE_BV
					{
						newLeafNode(lv_w_3_0, grammarAccess.getConstRuleAccess().getWBVTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConstRuleRule());
						}
						setWithLastConsumed(
							$current,
							"w",
							lv_w_3_0,
							"uclid.xtext.Uclid.BV");
					}
				)
			)?
		)
		    |
		(
			(
				lv_v_4_0=RULE_STRING
				{
					newLeafNode(lv_v_4_0, grammarAccess.getConstRuleAccess().getVSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConstRuleRule());
					}
					setWithLastConsumed(
						$current,
						"v",
						lv_v_4_0,
						"uclid.xtext.Uclid.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleTypeRule
entryRuleTypeRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRuleRule()); }
	iv_ruleTypeRule=ruleTypeRule
	{ $current=$iv_ruleTypeRule.current; }
	EOF;

// Rule TypeRule
ruleTypeRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeRuleAccess().getPrimitiveTypeRuleParserRuleCall_0());
		}
		this_PrimitiveTypeRule_0=rulePrimitiveTypeRule
		{
			$current = $this_PrimitiveTypeRule_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeRuleAccess().getEnumTypeRuleParserRuleCall_1());
		}
		this_EnumTypeRule_1=ruleEnumTypeRule
		{
			$current = $this_EnumTypeRule_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeRuleAccess().getTupleTypeRuleParserRuleCall_2());
		}
		this_TupleTypeRule_2=ruleTupleTypeRule
		{
			$current = $this_TupleTypeRule_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeRuleAccess().getRecordTypeRuleParserRuleCall_3());
		}
		this_RecordTypeRule_3=ruleRecordTypeRule
		{
			$current = $this_RecordTypeRule_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeRuleAccess().getArrayTypeRuleParserRuleCall_4());
		}
		this_ArrayTypeRule_4=ruleArrayTypeRule
		{
			$current = $this_ArrayTypeRule_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeRuleAccess().getTypeReferenceParserRuleCall_5());
		}
		this_TypeReference_5=ruleTypeReference
		{
			$current = $this_TypeReference_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePrimitiveTypeRule
entryRulePrimitiveTypeRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimitiveTypeRuleRule()); }
	iv_rulePrimitiveTypeRule=rulePrimitiveTypeRule
	{ $current=$iv_rulePrimitiveTypeRule.current; }
	EOF;

// Rule PrimitiveTypeRule
rulePrimitiveTypeRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_t_0_1='boolean'
				{
					newLeafNode(lv_t_0_1, grammarAccess.getPrimitiveTypeRuleAccess().getTBooleanKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveTypeRuleRule());
					}
					setWithLastConsumed($current, "t", lv_t_0_1, null);
				}
				    |
				lv_t_0_2='integer'
				{
					newLeafNode(lv_t_0_2, grammarAccess.getPrimitiveTypeRuleAccess().getTIntegerKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveTypeRuleRule());
					}
					setWithLastConsumed($current, "t", lv_t_0_2, null);
				}
				    |
				lv_t_0_3=RULE_BV
				{
					newLeafNode(lv_t_0_3, grammarAccess.getPrimitiveTypeRuleAccess().getTBVTerminalRuleCall_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveTypeRuleRule());
					}
					setWithLastConsumed(
						$current,
						"t",
						lv_t_0_3,
						"uclid.xtext.Uclid.BV");
				}
			)
		)
	)
;

// Entry rule entryRuleEnumTypeRule
entryRuleEnumTypeRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumTypeRuleRule()); }
	iv_ruleEnumTypeRule=ruleEnumTypeRule
	{ $current=$iv_ruleEnumTypeRule.current; }
	EOF;

// Rule EnumTypeRule
ruleEnumTypeRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getEnumTypeRuleAccess().getEnumTypeRuleAction_0(),
					$current);
			}
		)
		otherlv_1='enum'
		{
			newLeafNode(otherlv_1, grammarAccess.getEnumTypeRuleAccess().getEnumKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEnumTypeRuleAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumTypeRuleAccess().getEnumsEnumValueParserRuleCall_3_0());
				}
				lv_enums_3_0=ruleEnumValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumTypeRuleRule());
					}
					add(
						$current,
						"enums",
						lv_enums_3_0,
						"uclid.xtext.Uclid.EnumValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getEnumTypeRuleAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEnumTypeRuleAccess().getEnumsEnumValueParserRuleCall_4_1_0());
					}
					lv_enums_5_0=ruleEnumValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnumTypeRuleRule());
						}
						add(
							$current,
							"enums",
							lv_enums_5_0,
							"uclid.xtext.Uclid.EnumValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getEnumTypeRuleAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleEnumValue
entryRuleEnumValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumValueRule()); }
	iv_ruleEnumValue=ruleEnumValue
	{ $current=$iv_ruleEnumValue.current; }
	EOF;

// Rule EnumValue
ruleEnumValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getEnumValueAccess().getEnumValueAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEnumValueAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumValueRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleTupleTypeRule
entryRuleTupleTypeRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTupleTypeRuleRule()); }
	iv_ruleTupleTypeRule=ruleTupleTypeRule
	{ $current=$iv_ruleTupleTypeRule.current; }
	EOF;

// Rule TupleTypeRule
ruleTupleTypeRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getTupleTypeRuleAccess().getTupleTypeRuleAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getTupleTypeRuleAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTupleTypeRuleAccess().getTupleTypeRuleParserRuleCall_2_0());
				}
				lv_tuple_2_0=ruleTypeRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTupleTypeRuleRule());
					}
					add(
						$current,
						"tuple",
						lv_tuple_2_0,
						"uclid.xtext.Uclid.TypeRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getTupleTypeRuleAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTupleTypeRuleAccess().getTupleTypeRuleParserRuleCall_3_1_0());
					}
					lv_tuple_4_0=ruleTypeRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTupleTypeRuleRule());
						}
						add(
							$current,
							"tuple",
							lv_tuple_4_0,
							"uclid.xtext.Uclid.TypeRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getTupleTypeRuleAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleRecordTypeRule
entryRuleRecordTypeRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRecordTypeRuleRule()); }
	iv_ruleRecordTypeRule=ruleRecordTypeRule
	{ $current=$iv_ruleRecordTypeRule.current; }
	EOF;

// Rule RecordTypeRule
ruleRecordTypeRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getRecordTypeRuleAccess().getRecordTypeRuleAction_0(),
					$current);
			}
		)
		otherlv_1='record'
		{
			newLeafNode(otherlv_1, grammarAccess.getRecordTypeRuleAccess().getRecordKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getRecordTypeRuleAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getRecordTypeRuleAccess().getFieldsVarDeclParserRuleCall_3_0_0_0());
						}
						lv_fields_3_0=ruleVarDecl
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRecordTypeRuleRule());
							}
							add(
								$current,
								"fields",
								lv_fields_3_0,
								"uclid.xtext.Uclid.VarDecl");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_4=','
					{
						newLeafNode(otherlv_4, grammarAccess.getRecordTypeRuleAccess().getCommaKeyword_3_0_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getRecordTypeRuleAccess().getFieldsVarDeclParserRuleCall_3_0_1_1_0());
							}
							lv_fields_5_0=ruleVarDecl
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getRecordTypeRuleRule());
								}
								add(
									$current,
									"fields",
									lv_fields_5_0,
									"uclid.xtext.Uclid.VarDecl");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
				otherlv_6=':'
				{
					newLeafNode(otherlv_6, grammarAccess.getRecordTypeRuleAccess().getColonKeyword_3_0_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRecordTypeRuleAccess().getTypeTypeRuleParserRuleCall_3_0_3_0());
						}
						lv_type_7_0=ruleTypeRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRecordTypeRuleRule());
							}
							set(
								$current,
								"type",
								lv_type_7_0,
								"uclid.xtext.Uclid.TypeRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getRecordTypeRuleAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRecordTypeRuleAccess().getFieldsVarDeclParserRuleCall_3_1_1_0());
						}
						lv_fields_9_0=ruleVarDecl
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRecordTypeRuleRule());
							}
							add(
								$current,
								"fields",
								lv_fields_9_0,
								"uclid.xtext.Uclid.VarDecl");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_10=','
					{
						newLeafNode(otherlv_10, grammarAccess.getRecordTypeRuleAccess().getCommaKeyword_3_1_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getRecordTypeRuleAccess().getFieldsVarDeclParserRuleCall_3_1_2_1_0());
							}
							lv_fields_11_0=ruleVarDecl
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getRecordTypeRuleRule());
								}
								add(
									$current,
									"fields",
									lv_fields_11_0,
									"uclid.xtext.Uclid.VarDecl");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
				otherlv_12=':'
				{
					newLeafNode(otherlv_12, grammarAccess.getRecordTypeRuleAccess().getColonKeyword_3_1_3());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRecordTypeRuleAccess().getTypeTypeRuleParserRuleCall_3_1_4_0());
						}
						lv_type_13_0=ruleTypeRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRecordTypeRuleRule());
							}
							set(
								$current,
								"type",
								lv_type_13_0,
								"uclid.xtext.Uclid.TypeRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_14='}'
		{
			newLeafNode(otherlv_14, grammarAccess.getRecordTypeRuleAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleArrayTypeRule
entryRuleArrayTypeRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayTypeRuleRule()); }
	iv_ruleArrayTypeRule=ruleArrayTypeRule
	{ $current=$iv_ruleArrayTypeRule.current; }
	EOF;

// Rule ArrayTypeRule
ruleArrayTypeRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getArrayTypeRuleAccess().getArrayTypeRuleAction_0(),
					$current);
			}
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getArrayTypeRuleAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getArrayTypeRuleAccess().getBTypeRuleParserRuleCall_2_0());
				}
				lv_b_2_0=ruleTypeRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArrayTypeRuleRule());
					}
					add(
						$current,
						"b",
						lv_b_2_0,
						"uclid.xtext.Uclid.TypeRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getArrayTypeRuleAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getArrayTypeRuleAccess().getBTypeRuleParserRuleCall_3_1_0());
					}
					lv_b_4_0=ruleTypeRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArrayTypeRuleRule());
						}
						add(
							$current,
							"b",
							lv_b_4_0,
							"uclid.xtext.Uclid.TypeRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=']'
		{
			newLeafNode(otherlv_5, grammarAccess.getArrayTypeRuleAccess().getRightSquareBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getArrayTypeRuleAccess().getBaseTypeRuleParserRuleCall_5_0());
				}
				lv_base_6_0=ruleTypeRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArrayTypeRuleRule());
					}
					add(
						$current,
						"base",
						lv_base_6_0,
						"uclid.xtext.Uclid.TypeRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleControlBlockRule
entryRuleControlBlockRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getControlBlockRuleRule()); }
	iv_ruleControlBlockRule=ruleControlBlockRule
	{ $current=$iv_ruleControlBlockRule.current; }
	EOF;

// Rule ControlBlockRule
ruleControlBlockRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getControlBlockRuleAccess().getControlBlockRuleAction_0(),
					$current);
			}
		)
		otherlv_1='control'
		{
			newLeafNode(otherlv_1, grammarAccess.getControlBlockRuleAccess().getControlKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getControlBlockRuleAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getControlBlockRuleAccess().getCmdCmdRuleParserRuleCall_3_0());
				}
				lv_cmd_3_0=ruleCmdRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getControlBlockRuleRule());
					}
					add(
						$current,
						"cmd",
						lv_cmd_3_0,
						"uclid.xtext.Uclid.CmdRule");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getControlBlockRuleAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleCmdRule
entryRuleCmdRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCmdRuleRule()); }
	iv_ruleCmdRule=ruleCmdRule
	{ $current=$iv_ruleCmdRule.current; }
	EOF;

// Rule CmdRule
ruleCmdRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCmdRuleAccess().getLhsVarDeclParserRuleCall_0_0_0());
					}
					lv_lhs_0_0=ruleVarDecl
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCmdRuleRule());
						}
						set(
							$current,
							"lhs",
							lv_lhs_0_0,
							"uclid.xtext.Uclid.VarDecl");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1='='
			{
				newLeafNode(otherlv_1, grammarAccess.getCmdRuleAccess().getEqualsSignKeyword_0_1());
			}
		)?
		(
			this_ID_2=RULE_ID
			{
				newLeafNode(this_ID_2, grammarAccess.getCmdRuleAccess().getIDTerminalRuleCall_1_0());
			}
			otherlv_3='.'
			{
				newLeafNode(otherlv_3, grammarAccess.getCmdRuleAccess().getFullStopKeyword_1_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getCmdRuleAccess().getCCmdNameRuleParserRuleCall_2_0());
				}
				lv_c_4_0=ruleCmdNameRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCmdRuleRule());
					}
					set(
						$current,
						"c",
						lv_c_4_0,
						"uclid.xtext.Uclid.CmdNameRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='['
			{
				newLeafNode(otherlv_5, grammarAccess.getCmdRuleAccess().getLeftSquareBracketKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCmdRuleAccess().getLidIdListRuleParserRuleCall_3_1_0());
					}
					lv_lid_6_0=ruleIdListRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCmdRuleRule());
						}
						set(
							$current,
							"lid",
							lv_lid_6_0,
							"uclid.xtext.Uclid.IdListRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7=']'
			{
				newLeafNode(otherlv_7, grammarAccess.getCmdRuleAccess().getRightSquareBracketKeyword_3_2());
			}
		)?
		(
			otherlv_8='('
			{
				newLeafNode(otherlv_8, grammarAccess.getCmdRuleAccess().getLeftParenthesisKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCmdRuleAccess().getLexExprListRuleParserRuleCall_4_1_0());
					}
					lv_lex_9_0=ruleExprListRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCmdRuleRule());
						}
						set(
							$current,
							"lex",
							lv_lex_9_0,
							"uclid.xtext.Uclid.ExprListRule");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_10=')'
			{
				newLeafNode(otherlv_10, grammarAccess.getCmdRuleAccess().getRightParenthesisKeyword_4_2());
			}
		)?
		otherlv_11=';'
		{
			newLeafNode(otherlv_11, grammarAccess.getCmdRuleAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleCmdNameRule
entryRuleCmdNameRule returns [String current=null]:
	{ newCompositeNode(grammarAccess.getCmdNameRuleRule()); }
	iv_ruleCmdNameRule=ruleCmdNameRule
	{ $current=$iv_ruleCmdNameRule.current.getText(); }
	EOF;

// Rule CmdNameRule
ruleCmdNameRule returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='bmc'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCmdNameRuleAccess().getBmcKeyword_0());
		}
		    |
		kw='check'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCmdNameRuleAccess().getCheckKeyword_1());
		}
		    |
		kw='clear_context'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCmdNameRuleAccess().getClear_contextKeyword_2());
		}
		    |
		kw='induction'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCmdNameRuleAccess().getInductionKeyword_3());
		}
		    |
		kw='print'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCmdNameRuleAccess().getPrintKeyword_4());
		}
		    |
		kw='print_cex'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCmdNameRuleAccess().getPrint_cexKeyword_5());
		}
		    |
		kw='print_module'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCmdNameRuleAccess().getPrint_moduleKeyword_6());
		}
		    |
		kw='print_results'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCmdNameRuleAccess().getPrint_resultsKeyword_7());
		}
		    |
		kw='print_smt2'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCmdNameRuleAccess().getPrint_smt2Keyword_8());
		}
		    |
		kw='synthesize_invariant'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCmdNameRuleAccess().getSynthesize_invariantKeyword_9());
		}
		    |
		kw='unroll'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCmdNameRuleAccess().getUnrollKeyword_10());
		}
		    |
		kw='verify'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCmdNameRuleAccess().getVerifyKeyword_11());
		}
	)
;

// Entry rule entryRuleIdListRule
entryRuleIdListRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIdListRuleRule()); }
	iv_ruleIdListRule=ruleIdListRule
	{ $current=$iv_ruleIdListRule.current; }
	EOF;

// Rule IdListRule
ruleIdListRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getIdListRuleAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIdListRuleRule());
					}
					addWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		    |
		(
			(
				(
					lv_name_1_0=RULE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getIdListRuleAccess().getNameIDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIdListRuleRule());
						}
						addWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getIdListRuleAccess().getCommaKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIdListRuleAccess().getLIdListRuleParserRuleCall_1_2_0());
					}
					lv_l_3_0=ruleIdListRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIdListRuleRule());
						}
						set(
							$current,
							"l",
							lv_l_3_0,
							"uclid.xtext.Uclid.IdListRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleExprListRule
entryRuleExprListRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprListRuleRule()); }
	iv_ruleExprListRule=ruleExprListRule
	{ $current=$iv_ruleExprListRule.current; }
	EOF;

// Rule ExprListRule
ruleExprListRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getExprListRuleAccess().getExprListRuleAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getExprListRuleAccess().getExprsExprRuleParserRuleCall_1_0());
				}
				lv_exprs_1_0=ruleExprRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExprListRuleRule());
					}
					add(
						$current,
						"exprs",
						lv_exprs_1_0,
						"uclid.xtext.Uclid.ExprRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getExprListRuleAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExprListRuleAccess().getExprsExprRuleParserRuleCall_2_1_0());
					}
					lv_exprs_3_0=ruleExprRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExprListRuleRule());
						}
						add(
							$current,
							"exprs",
							lv_exprs_3_0,
							"uclid.xtext.Uclid.ExprRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

RULE_STRING : '"' ('\\' .|~(('\\'|'"')))* '"';

RULE_LOGEQU : '<==>';

RULE_LOGIMPLY : '==>';

RULE_REL_OP_RULE : ('<'|'>'|'=='|'!='|'<='|'>=');

RULE_BV : 'bv' RULE_INT;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
